% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/npr_learn.R
\name{FuNopaRe}
\alias{FuNopaRe}
\title{Functional Nonparametric Regression Learning}
\usage{
FuNopaRe(
  X,
  Y,
  semimetric,
  bandwidth_method = c("CV", "kNNgCV", "kNNlCV"),
  grid_of_bandwidths = NULL,
  k_nearest_neighbors = 20L
)
}
\arguments{
\item{X}{Matrix of functional data (each row is an observation)}

\item{Y}{Numeric vector of response values}

\item{semimetric}{Semimetric object}

\item{bandwidth_method}{Character string specifying bandwidth selection method:
"CV" for cross-validation, "kNNgCV" for k-NN global CV, "kNNlCV" for k-NN local CV}

\item{grid_of_bandwidths}{Numeric vector of bandwidth values for cross-validation}

\item{k_nearest_neighbors}{Integer specifying the number of nearest neighbors for k-NN cross-validation}
}
\value{
Object of class FuNopaRe containing:
  \itemize{
    \item semimetric: Semimetric object
    \item bandwidth_method: Bandwidth selection method used
    \item grid_of_bandwidths: Grid of bandwidth values used for cross-validation
    \item k_opt: Optimal k values from cross-validation
    \item mse: Learning error rate
    \item Yhat: Estimated response values for learning set
    \item X: Learning data
    \item Y: Learning response values
  }
}
\description{
Performs nonparametric regression for functional data using kernel methods
}
\examples{
\dontrun{
  # Example usage
  X <- matrix(rnorm(100 * 50), 100, 50)
  Y <- rnorm(100)
  semimetric <- semiemetric_deriv$new(q = 2, nknot = 10, range.grid = c(0, 1))
  k_nearest_neighbors <- 20L
  model <- FuNopaRe(X, Y, semimetric, k_nearest_neighbors)
}
}
